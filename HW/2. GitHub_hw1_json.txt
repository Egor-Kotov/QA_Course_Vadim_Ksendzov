JSON
 4. Создать внешний репозиторий c названием JSON.
зеленая кнопка NEW - public i td
 
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/Egor-Kotov/JSON.git
 
 6. Внутри локального JSON создать файл “new.json”.
touch new.json preferences.json skills.json bug_report.json

 7. Добавить файл под гит.
got add .

 8. Закоммитить файл.
git commit -am "Добавил 4 json файла"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vi new.json ; I ; 
{
"fullname": "Kotov Egor Nikolaevich",
"age": 28,
"pets": { "Number of pets": 1,
          "Type of pet": "cat",
          "Name": "Smoke"},
"salary": "3000$"
} ; ESC ; :wq

 11. Отправить изменения на внешний репозиторий.
git commit -am "aboutme"

 12. Создать файл preferences.json
выше сделал

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
{
    "preferences": {
        "film": "Scent of a Woman",
        "serial": "Firefly",
        "favorite dish": "Spaghetti",
        "favorite season": "Winter",
        "travel wish": "Sweden"
    }
}

 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
{
    "Course program": "1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC\n2. Что такое клиент серверная архитектура.\n3. Методы запросов на сервер.\n4. Ответы сервера.\n5. Структуры запросов и ответов.\n6. Что такое JSON, XML. Их структура.\n7. Тестирование API.\n8. Снятие и чтение логов.\n9. Postman, Fidler.\n10. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)\n11. Dev Tools веб браузеров (Google Chrome, FireFox).\n12. Мобильное тестирование.\n13. Особенность iOS, Android, гайдлайны.\n14. Сборка iOS приложений на XCode\n15. Сборка Android приложений на Android Studio\n16. Перехват мобильного трафика (сниффинг) через Charles\n17. Настройка прокси на iOS и Android.\n18. Командная строка (terminal) Linux Ubuntu. Копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса.\n19. Простой bash скриптринг , автоматизация рутинных задач на сервере.\n20. Доступ к удалённым серверам.\n21. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join\n22. Git\n23. Jmeter\n24. Методология разработки Scrum\n25. Python. Создание собственного клиент-серверного приложения."
}

 15. Отправить сразу 2 файла на внешний репозиторий.
git add . ; git commit -am "preferences + course program" ; git push

 16. На веб интерфейсе создать файл bug_report.json.
создал выше

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Зеленая кнопка 'Commit changes'

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
    "BugReport": {
        "Title": "Ближайшая машина в виде транспорта 'каршеринг' не отображается на навигационной карте",
        "Steps to reproduce": "1. Перейти на тестовый стенд Яндекс. Маршруты\n2. Ввести в поле Откуда 'Хамовнический вал, 18'\n3. Ввести в поле Куда 'Усачева, 3'\n4. Выбрать режим Свой\n5. Выбрать вид транспорта Каршеринг\n6. Нажать на кнопку 'Забронировать'\n7. Посмотреть на карту",
        "Expected Result": "На карте иконка ближайшей машины (при выборе тарифа) увеличивается, над ней появляется чёрная плашка с маркой машины",
        "Actual Result": "Иконки машин, не реагируют на смену тарифа, черная плашка ближайшей машины отсутствует",
        "Environment": "win 10, Firefox 94.0., также воспроизводится на win 10, Я.Браузер 21.11.1.932"
    }
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
комент ; Зеленая кнопка 'Commit changes'

 20. Синхронизировать внешний и локальный репозиторий JSON
git pull
